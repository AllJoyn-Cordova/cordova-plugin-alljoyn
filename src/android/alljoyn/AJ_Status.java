/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package alljoyn;

public final class AJ_Status {
  public final static AJ_Status AJ_OK = new AJ_Status("AJ_OK", alljoynJNI.AJ_OK_get());
  public final static AJ_Status AJ_ERR_NULL = new AJ_Status("AJ_ERR_NULL", alljoynJNI.AJ_ERR_NULL_get());
  public final static AJ_Status AJ_ERR_UNEXPECTED = new AJ_Status("AJ_ERR_UNEXPECTED", alljoynJNI.AJ_ERR_UNEXPECTED_get());
  public final static AJ_Status AJ_ERR_INVALID = new AJ_Status("AJ_ERR_INVALID", alljoynJNI.AJ_ERR_INVALID_get());
  public final static AJ_Status AJ_ERR_IO_BUFFER = new AJ_Status("AJ_ERR_IO_BUFFER", alljoynJNI.AJ_ERR_IO_BUFFER_get());
  public final static AJ_Status AJ_ERR_READ = new AJ_Status("AJ_ERR_READ", alljoynJNI.AJ_ERR_READ_get());
  public final static AJ_Status AJ_ERR_WRITE = new AJ_Status("AJ_ERR_WRITE", alljoynJNI.AJ_ERR_WRITE_get());
  public final static AJ_Status AJ_ERR_TIMEOUT = new AJ_Status("AJ_ERR_TIMEOUT", alljoynJNI.AJ_ERR_TIMEOUT_get());
  public final static AJ_Status AJ_ERR_MARSHAL = new AJ_Status("AJ_ERR_MARSHAL", alljoynJNI.AJ_ERR_MARSHAL_get());
  public final static AJ_Status AJ_ERR_UNMARSHAL = new AJ_Status("AJ_ERR_UNMARSHAL", alljoynJNI.AJ_ERR_UNMARSHAL_get());
  public final static AJ_Status AJ_ERR_END_OF_DATA = new AJ_Status("AJ_ERR_END_OF_DATA", alljoynJNI.AJ_ERR_END_OF_DATA_get());
  public final static AJ_Status AJ_ERR_RESOURCES = new AJ_Status("AJ_ERR_RESOURCES", alljoynJNI.AJ_ERR_RESOURCES_get());
  public final static AJ_Status AJ_ERR_NO_MORE = new AJ_Status("AJ_ERR_NO_MORE", alljoynJNI.AJ_ERR_NO_MORE_get());
  public final static AJ_Status AJ_ERR_SECURITY = new AJ_Status("AJ_ERR_SECURITY", alljoynJNI.AJ_ERR_SECURITY_get());
  public final static AJ_Status AJ_ERR_CONNECT = new AJ_Status("AJ_ERR_CONNECT", alljoynJNI.AJ_ERR_CONNECT_get());
  public final static AJ_Status AJ_ERR_UNKNOWN = new AJ_Status("AJ_ERR_UNKNOWN", alljoynJNI.AJ_ERR_UNKNOWN_get());
  public final static AJ_Status AJ_ERR_NO_MATCH = new AJ_Status("AJ_ERR_NO_MATCH", alljoynJNI.AJ_ERR_NO_MATCH_get());
  public final static AJ_Status AJ_ERR_SIGNATURE = new AJ_Status("AJ_ERR_SIGNATURE", alljoynJNI.AJ_ERR_SIGNATURE_get());
  public final static AJ_Status AJ_ERR_DISALLOWED = new AJ_Status("AJ_ERR_DISALLOWED", alljoynJNI.AJ_ERR_DISALLOWED_get());
  public final static AJ_Status AJ_ERR_FAILURE = new AJ_Status("AJ_ERR_FAILURE", alljoynJNI.AJ_ERR_FAILURE_get());
  public final static AJ_Status AJ_ERR_RESTART = new AJ_Status("AJ_ERR_RESTART", alljoynJNI.AJ_ERR_RESTART_get());
  public final static AJ_Status AJ_ERR_LINK_TIMEOUT = new AJ_Status("AJ_ERR_LINK_TIMEOUT", alljoynJNI.AJ_ERR_LINK_TIMEOUT_get());
  public final static AJ_Status AJ_ERR_DRIVER = new AJ_Status("AJ_ERR_DRIVER", alljoynJNI.AJ_ERR_DRIVER_get());
  public final static AJ_Status AJ_ERR_OBJECT_PATH = new AJ_Status("AJ_ERR_OBJECT_PATH", alljoynJNI.AJ_ERR_OBJECT_PATH_get());
  public final static AJ_Status AJ_ERR_BUSY = new AJ_Status("AJ_ERR_BUSY", alljoynJNI.AJ_ERR_BUSY_get());
  public final static AJ_Status AJ_ERR_DHCP = new AJ_Status("AJ_ERR_DHCP", alljoynJNI.AJ_ERR_DHCP_get());
  public final static AJ_Status AJ_ERR_ACCESS = new AJ_Status("AJ_ERR_ACCESS", alljoynJNI.AJ_ERR_ACCESS_get());
  public final static AJ_Status AJ_ERR_SESSION_LOST = new AJ_Status("AJ_ERR_SESSION_LOST", alljoynJNI.AJ_ERR_SESSION_LOST_get());
  public final static AJ_Status AJ_ERR_LINK_DEAD = new AJ_Status("AJ_ERR_LINK_DEAD", alljoynJNI.AJ_ERR_LINK_DEAD_get());
  public final static AJ_Status AJ_ERR_HDR_CORRUPT = new AJ_Status("AJ_ERR_HDR_CORRUPT", alljoynJNI.AJ_ERR_HDR_CORRUPT_get());
  public final static AJ_Status AJ_ERR_RESTART_APP = new AJ_Status("AJ_ERR_RESTART_APP", alljoynJNI.AJ_ERR_RESTART_APP_get());
  public final static AJ_Status AJ_ERR_INTERRUPTED = new AJ_Status("AJ_ERR_INTERRUPTED", alljoynJNI.AJ_ERR_INTERRUPTED_get());
  public final static AJ_Status AJ_ERR_REJECTED = new AJ_Status("AJ_ERR_REJECTED", alljoynJNI.AJ_ERR_REJECTED_get());
  public final static AJ_Status AJ_ERR_RANGE = new AJ_Status("AJ_ERR_RANGE", alljoynJNI.AJ_ERR_RANGE_get());
  public final static AJ_Status AJ_ERR_ACCESS_ROUTING_NODE = new AJ_Status("AJ_ERR_ACCESS_ROUTING_NODE", alljoynJNI.AJ_ERR_ACCESS_ROUTING_NODE_get());
  public final static AJ_Status AJ_ERR_KEY_EXPIRED = new AJ_Status("AJ_ERR_KEY_EXPIRED", alljoynJNI.AJ_ERR_KEY_EXPIRED_get());
  public final static AJ_Status AJ_ERR_SPI_NO_SPACE = new AJ_Status("AJ_ERR_SPI_NO_SPACE", alljoynJNI.AJ_ERR_SPI_NO_SPACE_get());
  public final static AJ_Status AJ_ERR_SPI_READ = new AJ_Status("AJ_ERR_SPI_READ", alljoynJNI.AJ_ERR_SPI_READ_get());
  public final static AJ_Status AJ_ERR_SPI_WRITE = new AJ_Status("AJ_ERR_SPI_WRITE", alljoynJNI.AJ_ERR_SPI_WRITE_get());
  public final static AJ_Status AJ_ERR_OLD_VERSION = new AJ_Status("AJ_ERR_OLD_VERSION", alljoynJNI.AJ_ERR_OLD_VERSION_get());
  public final static AJ_Status AJ_ERR_NVRAM_READ = new AJ_Status("AJ_ERR_NVRAM_READ", alljoynJNI.AJ_ERR_NVRAM_READ_get());
  public final static AJ_Status AJ_ERR_NVRAM_WRITE = new AJ_Status("AJ_ERR_NVRAM_WRITE", alljoynJNI.AJ_ERR_NVRAM_WRITE_get());
  public final static AJ_Status AJ_STATUS_LAST = new AJ_Status("AJ_STATUS_LAST", alljoynJNI.AJ_STATUS_LAST_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static AJ_Status swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + AJ_Status.class + " with value " + swigValue);
  }

  private AJ_Status(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private AJ_Status(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private AJ_Status(String swigName, AJ_Status swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static AJ_Status[] swigValues = { AJ_OK, AJ_ERR_NULL, AJ_ERR_UNEXPECTED, AJ_ERR_INVALID, AJ_ERR_IO_BUFFER, AJ_ERR_READ, AJ_ERR_WRITE, AJ_ERR_TIMEOUT, AJ_ERR_MARSHAL, AJ_ERR_UNMARSHAL, AJ_ERR_END_OF_DATA, AJ_ERR_RESOURCES, AJ_ERR_NO_MORE, AJ_ERR_SECURITY, AJ_ERR_CONNECT, AJ_ERR_UNKNOWN, AJ_ERR_NO_MATCH, AJ_ERR_SIGNATURE, AJ_ERR_DISALLOWED, AJ_ERR_FAILURE, AJ_ERR_RESTART, AJ_ERR_LINK_TIMEOUT, AJ_ERR_DRIVER, AJ_ERR_OBJECT_PATH, AJ_ERR_BUSY, AJ_ERR_DHCP, AJ_ERR_ACCESS, AJ_ERR_SESSION_LOST, AJ_ERR_LINK_DEAD, AJ_ERR_HDR_CORRUPT, AJ_ERR_RESTART_APP, AJ_ERR_INTERRUPTED, AJ_ERR_REJECTED, AJ_ERR_RANGE, AJ_ERR_ACCESS_ROUTING_NODE, AJ_ERR_KEY_EXPIRED, AJ_ERR_SPI_NO_SPACE, AJ_ERR_SPI_READ, AJ_ERR_SPI_WRITE, AJ_ERR_OLD_VERSION, AJ_ERR_NVRAM_READ, AJ_ERR_NVRAM_WRITE, AJ_STATUS_LAST };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

